name: xcube-viewer workflow

on:
  push:
  release:
    types: [published]

env:
  APP_NAME: xcube-viewer
  ORG_NAME: bcdev
  REG_NAME: quay.io
  UNITTEST: 0
  UPDATE_VERSION: 1

jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup xcube-viewer
        if: ${{ env.UNITTEST == '1' }}
        run: |
          yarn install
      - name: unittest-xcube-viewer
        if: ${{ env.UNITTEST == '1' }}
        run: |
          yarn test
      - uses: codecov/codecov-action@v1
        if: ${{ env.UNITTEST == '1' }}
        with:
          verbose: true # optional (default = false)
  # build docker images and push to
  build-docker-image:
    runs-on: ubuntu-latest
    name: build-docker-image
    needs: unittest
    steps:
      - name: git-checkout
        uses: actions/checkout@v2
      # Determine release tag from git ref
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: info
        id: info
        run: |
          echo "TAG: ${{ steps.release.outputs.tag }}"
          echo "EVENT: ${{ github.event_name }}"
      # Build and push 'latest' docker image from master
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image-latest
        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: master, latest
          registry: ${{ env.REG_NAME }}
          username: ${{ secrets.QUAY_REG_USERNAME }}
          password: ${{ secrets.QUAY_REG_PASSWORD }}
      # Build and push docker release images
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image-release
        if: ${{ github.event_name == 'release' }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: ${{ steps.release.outputs.tag }}
          registry: ${{ env.REG_NAME }}
          username: ${{ secrets.QUAY_REG_USERNAME }}
          password: ${{ secrets.QUAY_REG_PASSWORD }}
